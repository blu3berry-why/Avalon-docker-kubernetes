# This is a basic workflow to help you get started with Actions

name: Build and push the tagged build to production

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Fetch latest version
        id: fetch_version
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
        
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        uses: docker/login-action@v2.0.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}


      - name: Build and push gamelogic
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        uses: docker/build-push-action@v3.0.0
        with:
          context: ./GameLogic
          tags: ${{secrets.ACR_NAME}}/gamelogic:latest,${{secrets.ACR_NAME}}/gamelogic:${{ steps.fetch_version.outputs.TAG }}
          push: true
          
      - name: Build and push email-handler
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        uses: docker/build-push-action@v3.0.0
        with:
          context: ./EmailHandlerAvalon
          tags: ${{secrets.ACR_NAME}}/email-handler:latest,${{secrets.ACR_NAME}}/email-handler:${{ steps.fetch_version.outputs.TAG }}
          push: true
          
          # This is a basic workflow to help you get started with Actions

       
  deploy:
    runs-on: ubuntu-latest   
    needs: build_push_image
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Helm tool installer
        uses: Azure/setup-helm@v2.0
        
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1.1
        with:
          # Resource Group Name
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          # AKS Cluster Name
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          # AKS Cluster Subscription
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Helm dependency build
        run: |
         cd ./helm/avalon ;
         helm dependency build 
        
      - name: Helm deploy
        run: |
         cd ./helm/avalon ;
         helm upgrade \
            --install \
            --create-namespace \
            --namespace staging \
            avalon \
            . \
            --set email-handler.deployment.registry=${{ secrets.ACR_NAME }} \
            --set gamelogic.deployment.registry=${{ secrets.ACR_NAME }} \
            --set email-handler.deployment.image=email-handler \
            --set gamelogic.deployment.image=gamelogic \
            --set email-handler.deployment.tag=latest \
            --set gamelogic.deployment.tag=latest
#            --atomic \
#            --wait \
      

